//This query calculates the average age of open incidents in Microsoft Sentinel, presented in the format DD:HH:MM

let Starttime= datetime(2024-07-01 00:00:00);
let Endtime=datetime(2024-07-29 23:59:59.9);
// Find the first time each incident appeared in Sentinel
let FirstSeen=
SecurityIncident
| where CreatedTime >= Starttime and CreatedTime <= Endtime
| summarize arg_min(TimeGenerated, *) by IncidentNumber
| extend FirstSeenAtSentinel=TimeGenerated
| project FirstSeenAtSentinel, IncidentNumber;
//calculdate time difference between  now and the fist time seen in Sentinel
SecurityIncident
| where CreatedTime >= Starttime and CreatedTime <= Endtime
| summarize arg_max(TimeGenerated, *) by IncidentNumber
| where Status <> "Closed"
| join kind=inner FirstSeen on IncidentNumber
// Calculate the age of each incident in seconds
| extend AgeSeconds=datetime_diff("second", now(), FirstSeenAtSentinel)
// Calculate the average age in seconds for each severity level
| summarize AgeSecondsAvg=avg(AgeSeconds) by Severity
// Convert the average age from seconds into days, hours, minutes, and seconds
| extend seconds=AgeSecondsAvg
| extend days= bin(seconds / (24 * 3600),1)
| extend seconds= seconds % (24 * 3600)
| extend hours= bin((seconds/3600), 1)
| extend seconds = (seconds % 3600)
| extend minutes = bin((seconds / 60),1)
| extend seconds = bin((seconds % 60),1)
// Format the average age as DD:HH:MM:SS for easier readability
| extend AgeAverage=strcat(toint(days),":",toint(hours),":",toint(minutes),":",toint(seconds)) 
| project Severity, AgeAverage, days, hours, minutes, seconds
| sort by Severity
